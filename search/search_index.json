{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"faq/faq/","title":"Frequently Asked Questions","text":""},{"location":"faq/faq/#can-i-use-a-simplex-mmdvm-hotspot-on-the-network","title":"Can I use a simplex MMDVM hotspot on the network?","text":"<p>No, all hotspots must be Duplex models in order to be compatible.</p>"},{"location":"faq/faq/#can-i-use-the-network-without-a-hotspot","title":"Can I use the network without a hotspot?","text":"<p>Yes, we support access via Zello in case a radio is inaccessible. For the best experience, we encourage users to communicate with a P25 radio connected to a hotspot or wide-area site; however, we are expanding our non-RF options to access over IP.</p>"},{"location":"faq/faq/#can-i-share-my-ids-with-friends","title":"Can I share my ID's with friends?","text":"<p>Users may temporarily share radios containing their assigned IDs with friends, co-workers, and family for use on their own talkgroups. However, the actual sharing of IDs to be provisioned unto radios which are not the sole property of the registering subscriber is prohibited. Each radio shall have (1) uniquely assigned Radio ID issued by Network Operations &amp; Tek Support.</p>"},{"location":"faq/faq/#can-encryption-be-used","title":"Can encryption be used?","text":"<p>Encryption is permitted, and actively in use by a majority of our users. Many of our public talkgroups allow encryption use with a specific key; however, there are regional and use-case restrictions which may prevent encryption on one or more talkgroups. Please see the system talkgroups list for more information regarding encryption application throughout the network.</p>"},{"location":"faq/faq/#is-p25-phase-ii-supported","title":"Is P25 Phase II supported?","text":"<p>No. Phase II or P25 TDMA operation is unsupported due to hardware limitations.</p>"},{"location":"faq/faq/#is-link-layer-authentication-or-radio-authentication-in-use","title":"Is Link Layer Authentication or Radio Authentication in use?","text":"<p>LLA/RA is supported, however currently only 1 key per site can be configured.  The ability to define per-radio keys is currently under development and will be added to the system at a later date. LLA requirements are be on a site by site basis, and the enabling of this feature is at the discretion of each site owner.</p>"},{"location":"faq/faq/#is-tms-supported","title":"Is TMS supported?","text":"<p>Motorola Text Messaging Service is supported over conventional mode only via a Unit-to-Unit (U2U) configuration. This may change as we continue to add more features.</p>"},{"location":"faq/faq/#is-insert-motorola-proprietary-feature-here-supported","title":"Is *insert Motorola proprietary feature here* supported?","text":"<p>No proprietary features from ANY manufacturers are supported. CTRS operates on a Common-Air Interface so that vendor exclusions are eliminated, therefore permitting greater entry opportunity for a user's'choice of radio manufacturer.</p>"},{"location":"faq/faq/#can-i-use-a-quantar-or-gtr-with-the-system","title":"Can I use a Quantar or GTR with the system?","text":"<p>Somewhat. As of today, Quantars or GTRs in Qunatar emulation mode can be used as conventional sites using dvmdfsi paired with the DVMProject's V24 interface board; however due to the repeaters' power output exceeding CTRS's license limits, you will need to provide your own Part 90 license for these.</p> <p>Contact us on Discord for more information  </p>"},{"location":"radio-programming/","title":"Radio Programming","text":""},{"location":"radio-programming/#tools","title":"Tools","text":""},{"location":"radio-programming/#apx-radios","title":"APX Radios","text":"<ul> <li>APX CPS</li> <li>Programming cable </li> </ul>"},{"location":"radio-programming/#xts-radios","title":"XTS Radios","text":"<ul> <li>Astro CPS</li> <li>Programming cable</li> </ul>"},{"location":"radio-programming/motorola/","title":"Keyloading a Motorola radio","text":""},{"location":"radio-programming/motorola/#apx-series-software-keyloading","title":"APX Series (Software keyloading)","text":""},{"location":"radio-programming/motorola/#prerequisites","title":"Prerequisites","text":"<ul> <li>APX CPS </li> <li>Programming cable</li> <li>KFDTool</li> <li>Radio Feature Sets (either combination is supported, however you will be limited to the algorithm(s) in your flashcode).<ul> <li>QA06653   SW-AES</li> <li>QA07949   DES Software Crypto</li> <li>Q667      Advanced Digital Privacy</li> </ul> </li> </ul>"},{"location":"radio-programming/motorola/#cps-configuration","title":"CPS Configuration","text":""},{"location":"radio-programming/motorola/#secure-configuration-secure-wide","title":"Secure Configuration &gt; Secure Wide","text":"<ul> <li>General:<ul> <li>Secure Operation: <code>Software</code></li> <li>Secure Algorithms:<ul> <li>Check the boxes for the algorithms you will be loading (as available in the radio's flashcode)</li> </ul> </li> <li>Keyloading Source: <code>KVL</code></li> </ul> </li> <li>Encryption Key List:<ul> <li>Create as many rows matching the number of keys you will be loading</li> <li>Key Name should match the keys you will be loading for easy identification</li> <li>CKR# needs to be  in the decimal format value</li> </ul> </li> </ul>"},{"location":"radio-programming/motorola/#trunking-configuration-trunking-personality","title":"Trunking Configuration &gt; Trunking Personality","text":"<p>Select the <code>Personality</code> that contains the <code>Talkgroups</code> you will be assigning the keys to.</p> <ul> <li>Talkgroup Per talkgroup<ul> <li>Secure / Clear Strapping: <code>Select</code> or <code>Secure</code> depending on your system's requirements</li> <li>Key Select: <code>&lt;Assign your key&gt;</code></li> </ul> </li> </ul>"},{"location":"radio-programming/motorola/#kfdtool-configuration","title":"KFDTool Configuration","text":""},{"location":"radio-programming/motorola/#multi-key-load","title":"Multi Key Load","text":"<p>Make sure you have your .ekc file</p> <p>Steps:</p> <ol> <li>Download KFDTool from the above link</li> <li>Unzip the compressed file (No installation needed)</li> <li>Connect your APX radio via USB programming cable</li> <li>Select <code>Container</code> &gt; <code>Open</code></li> <li>Navigate to your downloaded .ekc file and open it. </li> <li>Enter the password for your file.</li> <li>Select P25 KFD &gt; Multiple Keyload from the top navigation bar</li> <li>Select the keys from the \"Available\" list and click <code>Add</code>.</li> <li>Click <code>Load</code>.</li> <li>Your radio should beep momentarily and then reboot. </li> </ol> <p>TROUBLESHOOTING:</p> <p>If you receive a key length error, check the following </p> <ul> <li>The number of entries in the <code>Secure</code> section table matches the number of keys you are trying to load.</li> <li>The CKR is correct for each key.</li> </ul>"},{"location":"setting-up/","title":"Welcome to CTRS","text":"<p>Before beginning the steps, please join the CTRS Discord if you have not already done so.</p> <p>All subscribers are REQUIRED to be part of the Discord.</p>"},{"location":"setting-up/#prerequisites","title":"Prerequisites","text":"<ul> <li>Raspberry Pi 3 or newer with Raspbian Legacy 32-bit (armv71) installed. Raspberry Pi 4 and 5 with more than 4GB of RAM may default to 64-bit; however, users should continue to attempt installation of the approved image.</li> <li>Terminal Access to the selected Pi via local keyboard or another remote protocol (e.g., PuTTY, Windows PowerShell).</li> <li>If you do not use the recommended USB conversion board (See the Recommended Hardware list), several small jumper wires.</li> <li>Basic Linux Knowledge or knowledge of where to find resources through the Internet.</li> </ul>"},{"location":"setting-up/#recommended-hardware","title":"Recommended Hardware","text":"<ul> <li> <p>Recommended hotspot hardware</p> </li> <li> <p>Recommended USB conversion board (or alternate AliExpress link)</p> </li> </ul> <p>You need a Raspberry Pi and one hotspot board in DVRS mode, or two hotspots and either two Raspberry Pis, one Pi and one USB board, or any Linux host and two USB boards to use the system.  USB boards are recommended as the better way to flash new firmware on your board.</p>"},{"location":"setting-up/#technical-support","title":"Technical Support","text":"<p>If you require any support with completing this process, or would like to join the system, please visit the CTRS Discord where you can ask your questions or open a support ticket through Jira.</p>"},{"location":"setting-up/flashing-hotspot/","title":"Flashing a hotspot","text":""},{"location":"setting-up/flashing-hotspot/#building-the-firmware","title":"Building the firmware","text":"Hat HotspotRepeater Board <ol> <li>Change directories to the firmware folder with <pre><code>cd /opt/centrunk/dvmfirmware-hs\n</code></pre></li> <li>Build the firmware binary <pre><code>sudo make -f Makefile.STM32FX mmdvm-hs-hat-dual\n</code></pre></li> </ol> <p>Info</p> <p>Depending on the performance of your Raspberry Pi or PC, this step can take a while.</p> <ol> <li>Change directories to the firmware folder with <pre><code>cd /opt/centrunk/dvmfirmware-hs\n</code></pre></li> <li>Build the firmware binary<ol> <li>Generic STM32 Board <pre><code>sudo make -f Makefile.STM32F4\n</code></pre></li> <li>Repeater Builder Board <pre><code>sudo make -f Makefile.STM32F4_POG\n</code></pre></li> <li>WA0EDA V3 cards <pre><code>sudo make -f Makefile.STM32F4_EDA\n</code></pre></li> </ol> <p>Info</p> <p>Depending on the performance of your Raspberry Pi or PC, this step can take a while.</p> </li> </ol>"},{"location":"setting-up/flashing-hotspot/#flashing-the-board","title":"Flashing the board","text":"Hat HotspotRepeater Board <p>You can flash the hotspot with a USB adapter board (recommended) or directly on the GPIO pins of a Raspberry Pi.</p> USB Adapter BoardGPIO Pins <p>Flash with the following command while hat is on the USB Adapter Board. Set the adapter switch to position B or \u2018ON\u2019, and plug the adapter board into the Pi.  Run the command: <pre><code>sudo stm32flash -v -w dvm-firmware-hs_f1.bin /dev/ttyUSB0\n</code></pre></p> <ol> <li>Using jumper wires, connect the sockets of BOOT 1 and BOOT 2 as shown on the image.     </li> </ol> <p>Danger</p> <p>Make sure the wires are not touching each other!</p> <ol> <li>With the jumpers connected, press the reset button on the board to put it into programming mode.</li> <li>Flash the board: <pre><code>sudo stm32flash -v -w dvm-firmware-hs_f1.bin -g 0x0 -R -i 20,-21,21:-20,21 /dev/ttyAMA0\n</code></pre></li> <li>Once the board is completely flashed, remove the jumpers added in step 1. This can be confirmed with a 100% progress and a success message in the command line window.</li> <li>The board should be ready to go. If unsuccessful, rinse and repeat the steps in this section.</li> </ol> <p>Flash the board with the following commands:</p> <p>Repeater Builder Board   <pre><code>sudo stm32flash -v -w dvm-firmware_f4-pog.bin -g 0x0 -i 20,-21,21:-20,21 /dev/ttyAMA0\n</code></pre></p> <p>This is unconfirmed at this time.</p> <p>WA0EDA V3 Cards   <pre><code>sudo stm32flash -v -w dvm-firmware-eda.bin -g 0x0 -i 20,-21,21:-20,21 /dev/ttyAMA0\n</code></pre></p> <p>These boards may still have a Boot 0 and Boot 1 pin that need to be jumped like a normal hotspot.</p> <p>Generic STM32F4 Board   <pre><code>sudo stm32flash -v -w dvm-firmware_f4.bin -g 0x0 -i 20,-21,21:-20,21 /dev/ttyAMA0\n</code></pre></p>"},{"location":"setting-up/join-network/","title":"Joining the network","text":"<p>You are ready to join the CTRS network.  Run the following command, then open a ticket by clicking the button below.</p> <pre><code>sudo curl -fsSL https://pkgs.netbird.io/install.sh | sudo sh\n</code></pre> <p>Open a ticket</p>"},{"location":"setting-up/preparing-pi/","title":"Preparing your Pi or PC","text":""},{"location":"setting-up/preparing-pi/#install-the-operating-system","title":"Install the operating system","text":"Raspberry PiPC (Debian) <p>Use the Raspberry Pi Imager to flash your SD card.</p> <ol> <li>Choose the appropriate board.</li> <li>Select the Legacy 32-bit (normal or lite) version of Raspberry Pi OS.</li> <li>In the customizations, if applicable, input your wireless network settings.</li> </ol> <ol> <li>Ensure your PC has Linux Debian installed.</li> </ol>"},{"location":"setting-up/preparing-pi/#prepare-the-hardware","title":"Prepare the hardware","text":"Raspberry PiPC (Debian) <ol> <li>Before applying power to any parts, install the SMA 90-degree connector and attach the provided antennas to the hotspot. Once the antennas are successfully installed, place the hotspot onto the Pi GPIO pins found at the top of the board for flashing.  Alternatively, place the hotspot on the USB board and connect the USB port to your Pi.</li> <li>Connect the Raspberry Pi to power, and an internet connection through Ethernet or WiFi. If you configured a WiFi network during image setup, the Raspberry Pi should connect to your network automatically.</li> </ol> <ol> <li>You will need at least one USB conversion board for DVRS, or two for CC/VC operation.</li> <li>Before applying power to any parts, install the SMA 90-degree connector and attach the provided antennas to the hotspot. Once the antennas are successfully installed, place the hotspot onto the USB board and connect the USB port to your computer.</li> <li>Connect the computer to power, and an internet connection through Ethernet or WiFi.</li> </ol>"},{"location":"setting-up/preparing-pi/#software-operations","title":"Software operations","text":"Raspberry PiPC (Debian) Info <p>There is an automatic script to perform the steps below.  Once the script completes, your computer will reboot and you can proceed to the next section, Flashing a hotspot. <pre><code>wget -qO- https://raw.githubusercontent.com/Centrunk/centrunk.github.io/main/script/prepare-pi.sh | sudo bash -\n</code></pre></p> <p>Executing scripts directly from the internet poses significant security risks. Always review the script's content before running it, especially when running it with elevated permissions like sudo. You can review the script by visiting the link of the script above.</p> <ol> <li> <p>Connect to your Pi and open a terminal window</p> <ol> <li>If you are using a monitor and keyboard connected to the Raspberry Pi itself, open the terminal window and skip to Step 2.</li> <li>If you are accessing the Raspberry Pi over your network, open a session in PuTTY or Windows PowerShell.<ol> <li>The syntax is ssh user@ipaddress, where user is the username specified in the image setup (default of pi) and ipaddress is the local IP address of the pi on your network.</li> <li>You will be prompted to enter your password. Enter the password you specified in the image setup (default raspberry) and press Enter on your keyboard.</li> </ol> </li> </ol> </li> <li> <p>Update the Pi and install needed utilities with the following commands:</p> <pre><code>sudo apt-get update &amp;&amp; apt-get upgrade -y # (1)!\n</code></pre> <ol> <li>This updates your Pi to the latest software.  The command <code>-y</code>, in this context, enables to bypass the prompt asking you to confirm with <code>y</code> that you want to make the changes.</li> </ol> <pre><code>sudo apt-get install -y git stm32flash gcc-arm-none-eabi gcc g++ \\\nmake build-essential libasio-dev libncurses-dev libssl-dev\n</code></pre> </li> <li> <p>Open the <code>cmdline</code> config:</p> <pre><code>sudo nano /boot/cmdline.txt\n</code></pre> </li> <li> <p>Remove <code>console=serial0,115200</code> at the start of the file, then press <code>Ctrl + S</code> to save and <code>Ctrl + X</code> to close.</p> </li> <li> <p>Open the startup config:</p> <pre><code>sudo nano /boot/config.txt\n</code></pre> </li> <li> <p>Add <code>dtoverlay=disable-bt</code> to the <code>[all]</code> section of the file, then press <code>Ctrl + S</code> to save and <code>Ctrl + X</code> to close.</p> <p>Warning</p> <p>If you are using a Pi 3, add <code>dtoverlay=pi3-disable-bt</code> to the <code>[all]</code> section of the file instead.</p> </li> <li> <p>If on a Pi 5 using Bookworm or newer, add the following to the <code>[all]</code> section of the file:     <pre><code>enable_uart=1\ndtoverlay=uart0,ctsrts\n</code></pre></p> </li> <li> <p>Disable services that will interfere with the hotspots function with the following commands:</p> <pre><code>sudo systemctl disable serial-getty@ttyAMA0.service &amp;&amp; \\\nsudo systemctl disable hciuart.service &amp;&amp; \\\nsudo systemctl disable bluealsa.service &amp;&amp; \\\nsudo systemctl disable bluetooth.service &amp;&amp; \\\nsudo systemctl mask serial-getty@ttyAMA0.service &amp;&amp; \\\nsudo systemctl mask hciuart.service &amp;&amp; \\\nsudo systemctl mask bluealsa.service &amp;&amp; \\\nsudo systemctl mask bluetooth.service\n</code></pre> </li> <li> <p>Make directories to the Centrunk folder, navigate to it, then clone the firmware with the following commands:</p> <pre><code>sudo mkdir /opt/centrunk &amp;&amp; \\\ncd /opt/centrunk\n</code></pre> <p>Info</p> <p>The firmware varies whether you use a hotspot or a repeater board.</p> HotspotsRepeater Boards <pre><code>sudo git clone --recurse-submodules https://github.com/DVMProject/dvmfirmware-hs.git\n</code></pre> <pre><code>sudo git clone --recurse-submodules https://github.com/DVMProject/dvmfirmware.git\n</code></pre> </li> <li> <p>Reboot the Raspberry Pi with the following command:</p> <pre><code>sudo reboot now\n</code></pre> </li> </ol> <ol> <li> <p>Update the PC and install needed utilities with the following commands:</p> <pre><code>sudo apt-get update &amp;&amp; apt-get upgrade -y # (1)!\n</code></pre> <ol> <li>This updates your PC to the latest software.  The command <code>-y</code>, in this context, enables to bypass the prompt asking you to confirm with <code>y</code> that you want to make the changes.</li> </ol> <pre><code>sudo apt-get install -y git stm32flash gcc-arm-none-eabi gcc g++ \\\nmake build-essential libasio-dev libncurses-dev libssl-dev\n</code></pre> </li> <li> <p>Make directories to the Centrunk folder, navigate to it, then clone the firmware with the following commands:</p> <pre><code>sudo mkdir /opt/centrunk &amp;&amp; \\\ncd /opt/centrunk\n</code></pre> <p>Info</p> <p>The firmware varies whether you use a hotspot or a repeater board.</p> HotspotsRepeater Boards <pre><code>sudo git clone --recurse-submodules https://github.com/DVMProject/dvmfirmware-hs.git\n</code></pre> <pre><code>sudo git clone --recurse-submodules https://github.com/DVMProject/dvmfirmware.git\n</code></pre> </li> </ol>"}]}